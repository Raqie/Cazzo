// dzieki memento zapamietujemy ostatnio robioną rzecz, możemy "cofnąć" ewentualnie "ponowić", a nasza praca bedzie zapisana oraz bedzie mozan ją przywrocic

public class Pamiatka {
   private String state;

   public Pamiatka(String state){
      this.state = state;
   }

   public String getState(){
      return state;
   }	
}

//klasa oryginału

public class Originator {
   private String state;

   public void setState(String state){
      this.state = state;
   }

   public String getState(){
      return state;
   }

   public Pamiatka saveStateToPamiatka(){
      return new Pamiatka(state);
   }

   public void getStateFromPamiatka(Pamiatka pamiatka){
      state = pamiatka.getState();
   }
}
//CareTaker przechowywuje pamiatki w celu ich np.: cofniecia czy ponownego zaladowania
//import java.util.ArrayList;
import java.util.List;

public class CareTaker {
   private List<Pamiatka> pamiatkaList = new ArrayList<Pamiatka>();

   public void add(Pamiatka state){
      mementoList.add(state);
   }

   public Pamiatka get(int index){
      return pamiatkaList.get(index);
   }
}
//i tutaj zabawa memento 
public class WzorzecMemento {
   public static void main(String[] args) {
   
      Originator originator = new Originator();
      CareTaker careTaker = new CareTaker();
      
      originator.setState("State #1");
      originator.setState("State #2");
      careTaker.add(originator.saveStateToPamiatka());
      
      originator.setState("State #3");
      careTaker.add(originator.saveStateToPamiatka());
      
      originator.setState("State #4");
      System.out.println("Current State: " + originator.getState());		
      
      originator.getStateFromPamiatka(careTaker.get(0));
      System.out.println("First saved State: " + originator.getState());
      originator.getStateFromPamiakta(careTaker.get(1));
      System.out.println("Second saved State: " + originator.getState());
   }
}

